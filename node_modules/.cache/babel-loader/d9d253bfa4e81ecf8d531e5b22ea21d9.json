{"ast":null,"code":"var _jsxFileName = \"/home/shrikanth/shrikanth/frontend/roc8/react-todo-2527/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { db } from \"./firebase_config\";\nimport firebase from \"firebase\";\nimport TodoListItem from \"./Todo\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [todoInput, setTodoInput] = useState(\"\");\n  useEffect(() => {\n    getTodos();\n  }, []); // blank to run only on first launch\n\n  function getTodos() {\n    db.collection(\"todos\").onSnapshot(function (querySnapshot) {\n      setTodos(querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        todo: doc.data().todo,\n        inprogress: doc.data().inprogress\n      })));\n    });\n  }\n\n  function addTodo(e) {\n    e.preventDefault();\n\n    if (todoInput === \"\") {\n      alert(\"Todo can't be empty!\");\n    } else {\n      db.collection(\"todos\").add({\n        inprogress: true,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        todo: todoInput\n      });\n      setTodoInput(\"\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#ffe268',\n        width: 500,\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Smalawad Todos App\\uD83D\\uDE0A \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: \"todo-textfield\",\n          id: \"standard-basic\",\n          label: \"Write a Todo\",\n          value: todoInput,\n          onChange: e => setTodoInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          onClick: addTodo,\n          style: {\n            display: \"none\"\n          },\n          children: \"Default \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 8\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-status\",\n        children: [\" \", todos.map(todo => /*#__PURE__*/_jsxDEV(TodoListItem, {\n          todo: todo.todo,\n          inprogress: todo.inprogress,\n          id: todo.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n}\n\n_s(App, \"GMsXrW5GwB13CgwZmEjogq9kwYs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/shrikanth/shrikanth/frontend/roc8/react-todo-2527/src/App.js"],"names":["useState","useEffect","TextField","Button","db","firebase","TodoListItem","App","todos","setTodos","todoInput","setTodoInput","getTodos","collection","onSnapshot","querySnapshot","docs","map","doc","id","todo","data","inprogress","addTodo","e","preventDefault","alert","add","timestamp","firestore","FieldValue","serverTimestamp","backgroundColor","width","margin","display","flexDirection","justifyContent","padding","target","value"],"mappings":"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","sourcesContent":["import {\n  useState,\n  useEffect\n} from \"react\";\nimport {\n  TextField,\n  Button\n} from \"@material-ui/core\";\nimport {\n  db\n} from \"./firebase_config\";\nimport firebase from \"firebase\";\nimport TodoListItem from \"./Todo\";\nimport \"./App.css\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [todoInput, setTodoInput] = useState(\"\");\n\n  useEffect(() => {\n    getTodos();\n  }, []); // blank to run only on first launch\n\n  function getTodos() {\n    db.collection(\"todos\").onSnapshot(function (querySnapshot) {\n      setTodos(\n        querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          todo: doc.data().todo,\n          inprogress: doc.data().inprogress,\n        }))\n      );\n    });\n  }\n\n  function addTodo(e) {\n    e.preventDefault();\n\n    if (todoInput === \"\") {\n      alert(\"Todo can't be empty!\");\n    } else {\n      db.collection(\"todos\").add({\n        inprogress: true,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        todo: todoInput,\n      });\n\n      setTodoInput(\"\");\n    }\n  }\n\n  return ( <\n    div className = \"App\" >\n    <\n    div style = {\n      {\n        backgroundColor: '#ffe268',\n        width: 500,\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        padding: 20\n      }\n    } >\n    <\n    h1 > Smalawad Todos AppðŸ˜Š < /h1> <\n    form >\n    <\n    TextField className = \"todo-textfield\"\n    id = \"standard-basic\"\n    label = \"Write a Todo\"\n    value = {\n      todoInput\n    }\n    onChange = {\n      (e) => setTodoInput(e.target.value)\n    }\n    /> <\n    Button type = \"submit\"\n    variant = \"contained\"\n    onClick = {\n      addTodo\n    }\n    style = {\n      {\n        display: \"none\"\n      }\n    } >\n    Default <\n    /Button> <\n    /form>\n\n    <\n    div className = \"todo-status\" > {\n      todos.map((todo) => ( <\n        TodoListItem todo = {\n          todo.todo\n        }\n        inprogress = {\n          todo.inprogress\n        }\n        id = {\n          todo.id\n        }\n        />\n      ))\n    } <\n    /div> <\n    /div> <\n    /div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}