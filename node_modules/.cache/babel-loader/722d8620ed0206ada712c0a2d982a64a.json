{"ast":null,"code":"import _slicedToArray from\"/home/shrikanth/shrikanth/frontend/roc8/react-todo-2527/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";import{TextField,Button}from\"@material-ui/core\";import{db}from\"./firebase_config\";import firebase from\"firebase\";import TodoListItem from\"./Todo\";import\"./App.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),todoInput=_useState4[0],setTodoInput=_useState4[1];useEffect(function(){getTodos();},[]);// blank to run only on first launch\nfunction getTodos(){db.collection(\"todos\").onSnapshot(function(querySnapshot){setTodos(querySnapshot.docs.map(function(doc){return{id:doc.id,todo:doc.data().todo,inprogress:doc.data().inprogress};}));});}function addTodo(e){e.preventDefault();if(todoInput===\"\"){alert(\"Todo can't be empty!\");}else{db.collection(\"todos\").add({inprogress:true,timestamp:firebase.firestore.FieldValue.serverTimestamp(),todo:todoInput});setTodoInput(\"\");}}return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#ffe268',width:500,margin:'0 auto',display:'flex',flexDirection:'column',justifyContent:'center',padding:20},children:[/*#__PURE__*/_jsx(\"h1\",{children:\" Smalawad Todos App\\uD83D\\uDE0A \"}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(TextField,{className:\"todo-textfield\",id:\"standard-basic\",label:\"Write a Todo\",value:todoInput,onChange:function onChange(e){return setTodoInput(e.target.value);}}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",onClick:addTodo,style:{display:\"none\"},children:\"Default\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"todo-status\",children:[\" \",todos.map(function(todo){return/*#__PURE__*/_jsx(TodoListItem,{todo:todo.todo,inprogress:todo.inprogress,id:todo.id});})]})]})});}export default App;","map":{"version":3,"sources":["/home/shrikanth/shrikanth/frontend/roc8/react-todo-2527/src/App.js"],"names":["useState","useEffect","TextField","Button","db","firebase","TodoListItem","App","todos","setTodos","todoInput","setTodoInput","getTodos","collection","onSnapshot","querySnapshot","docs","map","doc","id","todo","data","inprogress","addTodo","e","preventDefault","alert","add","timestamp","firestore","FieldValue","serverTimestamp","backgroundColor","width","margin","display","flexDirection","justifyContent","padding","target","value"],"mappings":"8KAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,SAAT,CAAoBC,MAApB,KAAkC,mBAAlC,CACA,OAASC,EAAT,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,QAAzB,CACA,MAAO,WAAP,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,eACaP,QAAQ,CAAC,EAAD,CADrB,wCACNQ,KADM,eACCC,QADD,8BAEqBT,QAAQ,CAAC,EAAD,CAF7B,yCAENU,SAFM,eAEKC,YAFL,eAIbV,SAAS,CAAC,UAAM,CACdW,QAAQ,GACT,CAFQ,CAEN,EAFM,CAAT,CAEQ;AAER,QAASA,CAAAA,QAAT,EAAoB,CAClBR,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBC,UAAvB,CAAkC,SAAUC,aAAV,CAAyB,CACzDN,QAAQ,CACNM,aAAa,CAACC,IAAd,CAAmBC,GAAnB,CAAuB,SAACC,GAAD,QAAU,CAC/BC,EAAE,CAAED,GAAG,CAACC,EADuB,CAE/BC,IAAI,CAAEF,GAAG,CAACG,IAAJ,GAAWD,IAFc,CAG/BE,UAAU,CAAEJ,GAAG,CAACG,IAAJ,GAAWC,UAHQ,CAAV,EAAvB,CADM,CAAR,CAOD,CARD,EASD,CAED,QAASC,CAAAA,OAAT,CAAiBC,CAAjB,CAAoB,CAClBA,CAAC,CAACC,cAAF,GAEA,GAAIf,SAAS,GAAK,EAAlB,CAAsB,CACpBgB,KAAK,CAAC,sBAAD,CAAL,CACD,CAFD,IAEO,CACLtB,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBc,GAAvB,CAA2B,CACzBL,UAAU,CAAE,IADa,CAEzBM,SAAS,CAAEvB,QAAQ,CAACwB,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EAFc,CAGzBX,IAAI,CAAEV,SAHmB,CAA3B,EAMAC,YAAY,CAAC,EAAD,CAAZ,CACD,CACF,CAED,mBACE,YAAK,SAAS,CAAG,KAAjB,uBACE,aAAK,KAAK,CAAI,CACZqB,eAAe,CAAE,SADL,CAEZC,KAAK,CAAE,GAFK,CAGZC,MAAM,CAAE,QAHI,CAIZC,OAAO,CAAE,MAJG,CAKZC,aAAa,CAAE,QALH,CAMZC,cAAc,CAAE,QANJ,CAOZC,OAAO,CAAE,EAPG,CAAd,wBAUF,wDAVE,cAWF,qCACE,KAAC,SAAD,EAAW,SAAS,CAAG,gBAAvB,CACE,EAAE,CAAG,gBADP,CAEE,KAAK,CAAG,cAFV,CAGE,KAAK,CAAI5B,SAHX,CAIA,QAAQ,CAAI,kBAACc,CAAD,QAAOb,CAAAA,YAAY,CAACa,CAAC,CAACe,MAAF,CAASC,KAAV,CAAnB,EAJZ,EADF,cAOE,KAAC,MAAD,EAAQ,IAAI,CAAG,QAAf,CACE,OAAO,CAAG,WADZ,CAEE,OAAO,CAAIjB,OAFb,CAGE,KAAK,CAAI,CAACY,OAAO,CAAE,MAAV,CAHX,qBAPF,GAXE,cA2BA,aAAK,SAAS,CAAG,aAAjB,eACE3B,KAAK,CAACS,GAAN,CAAU,SAACG,IAAD,qBACV,KAAC,YAAD,EACE,IAAI,CAAIA,IAAI,CAACA,IADf,CAEE,UAAU,CAAIA,IAAI,CAACE,UAFrB,CAGE,EAAE,CAAIF,IAAI,CAACD,EAHb,EADU,EAAV,CADF,GA3BA,GADF,EADF,CA0CD,CAED,cAAeZ,CAAAA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { db } from \"./firebase_config\";\nimport firebase from \"firebase\";\nimport TodoListItem from \"./Todo\";\nimport \"./App.css\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [todoInput, setTodoInput] = useState(\"\");\n\n  useEffect(() => {\n    getTodos();\n  }, []); // blank to run only on first launch\n\n  function getTodos() {\n    db.collection(\"todos\").onSnapshot(function (querySnapshot) {\n      setTodos(\n        querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          todo: doc.data().todo,\n          inprogress: doc.data().inprogress,\n        }))\n      );\n    });\n  }\n\n  function addTodo(e) {\n    e.preventDefault();\n\n    if (todoInput === \"\") {\n      alert(\"Todo can't be empty!\");\n    } else {\n      db.collection(\"todos\").add({\n        inprogress: true,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        todo: todoInput,\n      });\n\n      setTodoInput(\"\");\n    }\n  }\n\n  return ( \n    <div className = \"App\" >\n      <div style = {{\n        backgroundColor: '#ffe268',\n        width: 500,\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        padding: 20\n      }} \n      >\n    <h1> Smalawad Todos AppðŸ˜Š </h1> \n    <form>\n      <TextField className = \"todo-textfield\"\n        id = \"standard-basic\"\n        label = \"Write a Todo\"\n        value = {todoInput}\n      onChange = {(e) => setTodoInput(e.target.value)}\n      /> \n      <Button type = \"submit\"\n        variant = \"contained\"\n        onClick = {addTodo}\n        style = {{display: \"none\"}} \n      >\n      Default \n      </Button> \n      </form>\n\n      <div className = \"todo-status\" > {\n        todos.map((todo) => ( \n        <TodoListItem \n          todo = {todo.todo}\n          inprogress = {todo.inprogress}\n          id = {todo.id}\n       />\n        ))\n      } \n      </div> \n    </div> \n  </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}